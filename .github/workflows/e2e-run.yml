name: Run E2E tests
on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
      suite-id:
        required: true
        type: string
      test-yaml:
        required: false
        type: string
      test-path:
        required: false
        type: string
    outputs:
      artifact-id:
        description: "Artifact ID of the test results"
        value: ${{ jobs.run_e2e.outputs.artifact-id }}
      success-num:
        description: "Number of successful tests"
        value: ${{ jobs.run_e2e.outputs.success-num }}
      failure-num:
        description: "Number of failed tests"
        value: ${{ jobs.run_e2e.outputs.failure-num }}
      run-time-secs:
        description: "Total run time in seconds"
        value: ${{ jobs.run_e2e.outputs.run-time-secs }}


jobs:
  run_e2e:
    name: "Run E2E tests"
    runs-on: ${{ inputs.runner }}
    # Map the job outputs to step outputs
    outputs:
      artifact-id: ${{ steps.archive-artifacts.outputs.artifact-id }}
      success-num: ${{ steps.extract-results.outputs.success-num }}
      failure-num: ${{ steps.extract-results.outputs.failure-num }}
      run-time-secs: ${{ steps.extract-results.outputs.run-time-secs }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Clean last running results
        run: |
          rm -rf results
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Run E2E tests with yaml
        if: ${{ inputs.test-path == '' }}
        run: ./tests/docker/run_tests.sh
        env:
          ESK_TEST_YML: ${{ inputs.test-yaml }}
        shell: bash
      - name: Run E2E tests with path
        if: ${{ inputs.test-path != '' }}
        run: ./tests/docker/run_tests.sh
        env:
          TC_PATHS: ${{ inputs.test-path }}
        shell: bash
      - name: Extract results
        id: extract-results
        run: |
          results_path="$(pwd)/results/$(readlink results/latest | cut -d'/' -f5)"
          echo "success-num=$(jq .num_passed $results_path/report.json)" >> $GITHUB_OUTPUT
          echo "failure-num=$(jq .num_failed $results_path/report.json)" >> $GITHUB_OUTPUT
          echo "run-time-secs=$(jq .run_time_seconds $results_path/report.json)" >> $GITHUB_OUTPUT
        if: ${{ always() }}
        shell: bash
      - name: Archive result artifacts
        id: archive-artifacts
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: ${{ inputs.suite-id }}
          retention-days: 3
          compression-level: 1
          path: |
            results/*/report*
      - name: show results
        run: |
          echo "success-num=${{ steps.extract-results.outputs.success-num }}"
          echo "failure-num=${{ steps.extract-results.outputs.failure-num }}"
          echo "run-time-secs=${{ steps.extract-results.outputs.run-time-secs }}"
          echo "artifact-id=${{ steps.archive-artifacts.outputs.artifact-id }}"
        if: ${{ always() }}
      - name: Bring down docker containers
        run: ./tests/docker/ducker-ak down
        shell: bash
        if: ${{ always() }}
