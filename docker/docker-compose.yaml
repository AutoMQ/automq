# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Single-node AutoMQ setup with MinIO for quick starts
version: "3.8"

services:
  # MinIO service for S3 storage
  minio:
    container_name: "${MINIO_DOCKER_NAME-minio}"
    hostname: "${MINIO_DOCKER_NAME-minio}"
    image: minio/minio:RELEASE.2023-09-04T19-57-37Z
    ports:
      - "9000:9000"  # MinIO API
      - "9001:9001"  # MinIO Console
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      automq_net:
        ipv4_address: 10.6.0.2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 3

  # Create needed buckets
  mc:
    container_name: "${MC_DOCKER_NAME-mc}"
    hostname: "${MC_DOCKER_NAME-mc}"
    image: minio/mc:RELEASE.2023-09-07T22-48-55Z
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/automq-data;
      /usr/bin/mc policy set public myminio/automq-data;
      exit 0;
      "
    networks:
      - automq_net

  # Single node with combined controller and broker roles
  automq:
    container_name: "${AUTOMQ_DOCKER_NAME-automq}"
    hostname: "${AUTOMQ_DOCKER_NAME-automq}"
    stop_grace_period: 2m
    image: automqinc/automq:1.3.0
    ports:
      - "9092:9092"  # Kafka API
      - "9093:9093"  # Controller API
    environment:
      - KAFKA_S3_ACCESS_KEY=minioadmin
      - KAFKA_S3_SECRET_KEY=minioadmin
      - KAFKA_HEAP_OPTS=-Xms1g -Xmx1g -XX:MetaspaceSize=96m -XX:MaxDirectMemorySize=1G
      - KAFKA_CFG_AUTOBALANCER_REPORTER_NETWORK_IN_CAPACITY=5120
      - KAFKA_CFG_AUTOBALANCER_REPORTER_NETWORK_OUT_CAPACITY=5120
      - KAFKA_CFG_AUTOBALANCER_REPORTER_METRICS_REPORTING_INTERVAL_MS=5000
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
    command:
      - bash
      - -c
      - |
        /opt/automq/scripts/start.sh up --process.roles controller,broker --node.id 0 --controller.quorum.voters 0@automq:9093 --s3.bucket automq-data --s3.endpoint http://10.6.0.2:9000 --s3.region us-east-1 --s3.path-style-access true
    networks:
      automq_net:
        ipv4_address: 10.6.0.3
    depends_on:
      - minio
      - mc

volumes:
  minio_data:
    driver: local

networks:
  automq_net:
    name: automq_net
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "10.6.0.0/16"
          gateway: "10.6.0.1"
