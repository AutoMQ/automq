global:
  security:
    allowInsecureImages: true
image:
  registry: automqinc
  repository: automq
  tag: 1.5.0-bitnami
  pullPolicy: Always
extraEnvVars:
  - name: AWS_ACCESS_KEY_ID
    value: "${access-key}"
  - name: AWS_SECRET_ACCESS_KEY
    value: "${secret-key}"
controller:
  replicaCount: 3
  resources:
    requests:
      cpu: "3000m"
      memory: "12Gi"
    limits:
      cpu: "4000m"
      memory: "16Gi"
  heapOpts: -Xmx6g -Xms6g -XX:MaxDirectMemorySize=6g -XX:MetaspaceSize=96m
  extraConfig: |
    elasticstream.enable=true
    autobalancer.client.auth.sasl.mechanism=PLAIN
    autobalancer.client.auth.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="inter_broker_user" password="interbroker-password-placeholder" user_inter_broker_user="interbroker-password-placeholder";
    autobalancer.client.auth.security.protocol=SASL_PLAINTEXT
    autobalancer.client.listener.name=INTERNAL
    s3.wal.cache.size=2147483648
    s3.block.cache.size=1073741824
    s3.stream.allocator.policy=POOLED_DIRECT
    s3.network.baseline.bandwidth=245366784
    # Replace the following with your bucket config
    s3.ops.buckets=1@s3://${ops-bucket}?region=${region}&endpoint=${endpoint}
    s3.data.buckets=0@s3://${data-bucket}?region=${region}&endpoint=${endpoint}
    s3.wal.path=0@s3://${data-bucket}?region=${region}&endpoint=${endpoint}
    automq.zonerouter.channels=0@s3://${data-bucket}?region=${region}&endpoint=${endpoint}
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/instance
                operator: In
                # your helm release name
                values:
                  - automq-release
              - key: app.kubernetes.io/component
                operator: In
                values:
                  - controller-eligible
                  - broker
          topologyKey: kubernetes.io/hostname
#    ---     nodeAffinity recommended   ---
#    nodeAffinity:
#      requiredDuringSchedulingIgnoredDuringExecution:
#        nodeSelectorTerms:
#          - matchExpressions:
#              - key: "${your-node-label-key}"
#                operator: In
#                values:
#                  - "${your-node-label-value}"
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          app.kubernetes.io/component: controller-eligible
  tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "automq"
      effect: "NoSchedule"
  persistence:
    size: 20Gi

broker:
  replicaCount: 3
  resources:
    requests:
      cpu: "3000m"
      memory: "12Gi"
    limits:
      cpu: "4000m"
      memory: "16Gi"
  heapOpts: -Xmx6g -Xms6g -XX:MaxDirectMemorySize=6g -XX:MetaspaceSize=96m
  extraConfig: |
    elasticstream.enable=true
    autobalancer.client.auth.sasl.mechanism=PLAIN
    autobalancer.client.auth.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="inter_broker_user" password="interbroker-password-placeholder" user_inter_broker_user="interbroker-password-placeholder";
    autobalancer.client.auth.security.protocol=SASL_PLAINTEXT
    autobalancer.client.listener.name=INTERNAL
    s3.wal.cache.size=2147483648
    s3.block.cache.size=1073741824
    s3.stream.allocator.policy=POOLED_DIRECT
    s3.network.baseline.bandwidth=245366784
    # Replace the following with your bucket config
    s3.ops.buckets=1@s3://${ops-bucket}?region=${region}&endpoint=${endpoint}
    s3.data.buckets=0@s3://${data-bucket}?region=${region}&endpoint=${endpoint}
    s3.wal.path=0@s3://${data-bucket}?region=${region}&endpoint=${endpoint}
    automq.zonerouter.channels=0@s3://${data-bucket}?region=${region}&endpoint=${endpoint}
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/instance
                operator: In
                # your helm release name
                values:
                  - automq-release
              - key: app.kubernetes.io/component
                operator: In
                values:
                  - controller-eligible
                  - broker
          topologyKey: kubernetes.io/hostname
#    ---     nodeAffinity recommended   ---
#    nodeAffinity:
#      requiredDuringSchedulingIgnoredDuringExecution:
#        nodeSelectorTerms:
#          - matchExpressions:
#              - key: "${your-node-label-key}"
#                operator: In
#                values:
#                  - "${your-node-label-value}"
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          app.kubernetes.io/component: broker
  tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "automq"
      effect: "NoSchedule"
brokerRackAssignment: aws-az
