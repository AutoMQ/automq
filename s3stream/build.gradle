/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api 'software.amazon.awssdk:s3:2.20.127'
    api 'io.netty:netty-tcnative-boringssl-static:2.0.53.Final'
    api 'io.netty:netty-buffer:4.1.100.Final'
    api 'com.bucket4j:bucket4j-core:8.5.0'
    api 'org.apache.commons:commons-lang3:3.13.0'
    api 'org.slf4j:slf4j-api:2.0.9'
    api 'net.sourceforge.argparse4j:argparse4j:0.9.0'
    api 'net.java.dev.jna:jna:5.2.0'
    api 'com.google.guava:guava:32.0.1-jre'
    api 'com.fasterxml.jackson.core:jackson-databind:2.16.0'
    api 'io.opentelemetry:opentelemetry-api:1.32.0'
    api 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations:1.32.0'
    api 'org.aspectj:aspectjrt:1.9.20.1'
    api 'org.aspectj:aspectjweaver:1.9.20.1'
    testImplementation 'org.slf4j:slf4j-simple:2.0.9'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
}

group = 'com.automq.elasticstream'
version = '0.18.0-SNAPSHOT'
description = 's3stream'

java {
    withSourcesJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
